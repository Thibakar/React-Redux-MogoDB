{"version":3,"sources":["store.js","reducers/productReducers.js","types.js","reducers/cartReducers.js","reducers/orderReducers.js","components/Filter.js","actions/productActions.js","util.js","components/Products.js","actions/cartActions.js","components/Cart.js","actions/orderActions.js","screens/HomeScreen.js","components/Orders.js","screens/AdminScreen.js","App.js","index.js"],"names":["composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","products","state","action","type","size","payload","filteredItems","items","sort","cart","cartItems","JSON","parse","localStorage","getItem","order","orders","applyMiddleware","thunk","Filter","this","props","filteredProducts","className","length","value","onChange","e","sortProducts","target","filterProducts","Component","connect","dispatch","filter","x","availableSizes","indexOf","sortedProducts","slice","a","b","_id","price","console","log","formatCurrency","num","Number","toFixed","toLocaleString","Products","openModal","product","setState","closeModal","fetchProducts","bottom","cascade","map","key","href","onClick","src","image","alt","title","addToCart","isOpen","onRequestClose","description","fetch","res","json","data","getState","alreadyExists","forEach","count","push","setItem","stringify","Cart","handleInput","name","createOrder","preventDefault","email","address","total","reduce","c","clearOrder","showCheckout","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","HomeScreen","Orders","fetchOrders","AdminScreen","App","to","path","component","exact","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAOMA,EAAkBC,OAAOC,sCAAwCC,IAUxDC,EATDC,YACZC,YAAgB,CACdC,SCJ2B,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICPmC,0BDQjC,OAAO,2BACFF,GADL,IAEEG,KAAMF,EAAOG,QAAQD,KACrBE,cAAeJ,EAAOG,QAAQE,QAElC,ICZmC,0BDajC,OAAO,2BACFN,GADL,IAEEO,KAAMN,EAAOG,QAAQG,KACrBF,cAAeJ,EAAOG,QAAQE,QAElC,ICpB0B,iBDqBxB,MAAO,CAAEA,MAAOL,EAAOG,QAASC,cAAeJ,EAAOG,SACxD,QACE,OAAOJ,IDZTQ,KGTuB,WAGrB,IAFJR,EAEG,uDAFK,CAAES,UAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,OACrEZ,EACG,uCACH,OAAQA,EAAOC,MACb,IDJuB,cCMvB,IDL4B,mBCM1B,MAAO,CAAEO,UAAWR,EAAOG,QAAQK,WACrC,QACE,OAAOT,IHATc,MIViB,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IFCwB,eEAtB,MAAO,CAAEY,MAAOb,EAAOG,SACzB,IFAuB,cECrB,MAAO,CAAEU,MAAO,MAClB,IFAwB,eECtB,MAAO,CAAEC,OAAQd,EAAOG,SAC1B,QACE,OAAOJ,MJLQ,GASnBR,EAAgBwB,YAAgBC,O,gDKX5BC,E,uKACM,IAAD,OACP,OAAQC,KAAKC,MAAMC,iBAGjB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,iBACZH,KAAKC,MAAMC,iBAAiBE,OAD/B,aAGA,yBAAKD,UAAU,eAAf,QACQ,IACN,4BACEE,MAAOL,KAAKC,MAAMb,KAClBkB,SAAU,SAACC,GAAD,OACR,EAAKN,MAAMO,aACT,EAAKP,MAAMC,iBACXK,EAAEE,OAAOJ,SAIb,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,aAGJ,yBAAKF,UAAU,eAAf,SACS,IACP,4BACEE,MAAOL,KAAKC,MAAMjB,KAClBsB,SAAU,SAACC,GAAD,OACR,EAAKN,MAAMS,eAAe,EAAKT,MAAMrB,SAAU2B,EAAEE,OAAOJ,SAG1D,4BAAQA,MAAM,IAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,UApCN,+C,GAHeM,aA8CNC,eACb,SAAC/B,GAAD,MAAY,CACVG,KAAMH,EAAMD,SAASI,KACrBI,KAAMP,EAAMD,SAASQ,KACrBR,SAAUC,EAAMD,SAASO,MACzBe,iBAAkBrB,EAAMD,SAASM,iBAEnC,CACEwB,eC9C0B,SAAC9B,EAAUI,GAAX,OAAoB,SAAC6B,GACjDA,EAAS,CACP9B,KJbmC,0BIcnCE,QAAS,CACPD,KAAMA,EACNG,MACW,KAATH,EACIJ,EACAA,EAASkC,QAAO,SAACC,GAAD,OAAOA,EAAEC,eAAeC,QAAQjC,IAAS,UDuCjEwB,aCnCwB,SAACN,EAAkBd,GAAnB,OAA4B,SAACyB,GACvD,IAAMK,EAAiBhB,EAAiBiB,QAC3B,WAAT/B,EACF8B,EAAe9B,MAAK,SAACgC,EAAGC,GAAJ,OAAWD,EAAEE,IAAMD,EAAEC,IAAM,GAAK,KAEpDJ,EAAe9B,MAAK,SAACgC,EAAGC,GAAJ,MACT,WAATjC,EACIgC,EAAEG,MAAQF,EAAEE,MACV,GACC,EACHH,EAAEG,MAAQF,EAAEE,OACX,EACD,KAGRC,QAAQC,IAAIP,GACZL,EAAS,CACP9B,KJvCmC,0BIwCnCE,QAAS,CACPG,KAAMA,EACND,MAAO+B,QDMEN,CAWbb,GE7Da,SAAS2B,EAAeC,GACrC,MAAO,IAAMC,OAAOD,EAAIE,QAAQ,IAAIC,iBAAmB,I,uDCQnDC,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAQR+B,UAAY,SAACC,GACX,EAAKC,SAAS,CAAED,aAVC,EAYnBE,WAAa,WACX,EAAKD,SAAS,CAAED,QAAS,QAXzB,EAAKpD,MAAQ,CACXoD,QAAS,MAHM,E,gEAOjBjC,KAAKC,MAAMmC,kB,+BAQH,IAAD,OACCH,EAAYjC,KAAKnB,MAAjBoD,QACR,OACE,6BACE,kBAAC,IAAD,CAAMI,QAAM,EAACC,SAAO,GAChBtC,KAAKC,MAAMrB,SAGX,wBAAIuB,UAAU,YACXH,KAAKC,MAAMrB,SAAS2D,KAAI,SAACN,GAAD,OACvB,wBAAIO,IAAKP,EAAQX,KACf,yBAAKnB,UAAU,WACb,uBACEsC,KAAM,IAAMR,EAAQX,IACpBoB,QAAS,kBAAM,EAAKV,UAAUC,KAE9B,yBAAKU,IAAKV,EAAQW,MAAOC,IAAKZ,EAAQa,QACtC,2BAAIb,EAAQa,QAEd,yBAAK3C,UAAU,iBACb,6BAAMuB,EAAeO,EAAQV,QAC7B,4BACEmB,QAAS,kBAAM,EAAKzC,MAAM8C,UAAUd,IACpC9B,UAAU,kBAFZ,sBAfV,4CA4BH8B,GACC,kBAAC,IAAD,CAAOe,QAAQ,EAAMC,eAAgBjD,KAAKmC,YACxC,kBAAC,IAAD,KACE,4BAAQhC,UAAU,cAAcuC,QAAS1C,KAAKmC,YAA9C,KAGA,yBAAKhC,UAAU,mBACb,yBAAKwC,IAAKV,EAAQW,MAAOC,IAAKZ,EAAQa,QACtC,yBAAK3C,UAAU,+BACb,2BACE,gCAAS8B,EAAQa,QAEnB,2BAAIb,EAAQiB,aACZ,6CACkB,IACfjB,EAAQjB,eAAeuB,KAAI,SAACxB,GAAD,OAC1B,8BACG,IACD,4BAAQZ,UAAU,UAAUY,QAIlC,yBAAKZ,UAAU,iBACb,6BAAMuB,EAAeO,EAAQV,QAC7B,4BACEpB,UAAU,iBACVuC,QAAS,WACP,EAAKzC,MAAM8C,UAAUd,GACrB,EAAKE,eAJT,yB,GA1EGxB,aA6FRC,eACb,SAAC/B,GAAD,MAAY,CAAED,SAAUC,EAAMD,SAASM,iBACvC,CACEkD,cFvGyB,yDAAM,WAAOvB,GAAP,iBAAAO,EAAA,sEACf+B,MAAM,iBADS,cAC3BC,EAD2B,gBAEdA,EAAIC,OAFU,OAE3BC,EAF2B,OAGjC9B,QAAQC,IAAI6B,GACZzC,EAAS,CACP9B,KJP0B,iBIQ1BE,QAASqE,IANsB,2CAAN,uDEwGzBP,UCxGqB,SAACd,GAAD,OAAa,SAACpB,EAAU0C,GAC/C,IAAMjE,EAAYiE,IAAWlE,KAAKC,UAAU6B,QACxCqC,GAAgB,EACpBlE,EAAUmE,SAAQ,SAAC1C,GACbA,EAAEO,MAAQW,EAAQX,MACpBkC,GAAgB,EAChBzC,EAAE2C,YAGDF,GACHlE,EAAUqE,KAAV,2BAAoB1B,GAApB,IAA6ByB,MAAO,KAEtC7C,EAAS,CACP9B,KPZuB,cOavBE,QAAS,CAAEK,eAEbG,aAAamE,QAAQ,YAAarE,KAAKsE,UAAUvE,ODoFpCsB,CAMbmB,G,QEnGI+B,E,kDACJ,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IAQR8D,YAAc,SAACxD,GACb,EAAK2B,SAAL,eAAiB3B,EAAEE,OAAOuD,KAAOzD,EAAEE,OAAOJ,SAVzB,EAYnB4D,YAAc,SAAC1D,GACbA,EAAE2D,iBACF,IAAMvE,EAAQ,CACZqE,KAAM,EAAKnF,MAAMmF,KACjBG,MAAO,EAAKtF,MAAMsF,MAClBC,QAAS,EAAKvF,MAAMuF,QACpB9E,UAAW,EAAKW,MAAMX,UACtB+E,MAAO,EAAKpE,MAAMX,UAAUgF,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,EAAEhD,MAAQgD,EAAEb,QAAO,IAEtE,EAAKzD,MAAMgE,YAAYtE,IArBN,EAuBnBwC,WAAa,WACX,EAAKlC,MAAMuE,cAtBX,EAAK3F,MAAQ,CACXmF,KAAM,GACNG,MAAO,GACPC,QAAS,GACTK,cAAc,GANC,E,qDA0BT,IAAD,SACsBzE,KAAKC,MAA1BX,EADD,EACCA,UAAWK,EADZ,EACYA,MACnB,OACE,6BACwB,IAArBL,EAAUc,OACT,yBAAKD,UAAU,oBAAf,iBAEA,yBAAKA,UAAU,oBAAf,YACYb,EAAUc,OADtB,eAC0C,KAI3CT,GACC,kBAAC,IAAD,CAAOqD,QAAQ,EAAMC,eAAgBjD,KAAKmC,YACxC,kBAAC,IAAD,KACE,4BAAQhC,UAAU,cAAcuC,QAAS1C,KAAKmC,YAA9C,KAGA,yBAAKhC,UAAU,iBACb,wBAAIA,UAAU,mBAAd,+BACA,qCAAWR,EAAM2B,KACjB,4BACE,4BACE,sCACA,6BAAM3B,EAAMqE,OAEd,4BACE,uCACA,6BAAMrE,EAAMwE,QAEd,4BACE,yCACA,6BAAMxE,EAAMyE,UAEd,4BACE,sCACA,6BAAMzE,EAAM+E,YAEd,4BACE,uCACA,6BAAMhD,EAAe/B,EAAM0E,SAE7B,4BACE,4CACA,6BACG1E,EAAML,UAAUiD,KAAI,SAACxB,GAAD,OACnB,6BACGA,EAAE2C,MADL,IACa,MADb,IACqB3C,EAAE+B,gBAUvC,6BACE,yBAAK3C,UAAU,QACb,kBAAC,IAAD,CAAMwE,MAAI,EAACrC,SAAO,GAChB,wBAAInC,UAAU,cACXb,EAAUiD,KAAI,SAACqC,GAAD,OACb,wBAAIpC,IAAKoC,EAAKtD,KACZ,6BACE,yBAAKqB,IAAKiC,EAAKhC,MAAOC,IAAK+B,EAAK9B,SAElC,6BACE,6BAAM8B,EAAK9B,OACX,yBAAK3C,UAAU,SACZuB,EAAekD,EAAKrD,OADvB,MACkCqD,EAAKlB,MAAO,IAC5C,4BACEvD,UAAU,SACVuC,QAAS,kBAAM,EAAKzC,MAAM4E,eAAeD,KAF3C,mBAaQ,IAArBtF,EAAUc,QACT,6BACE,yBAAKD,UAAU,QACb,yBAAKA,UAAU,SACb,sCACS,IACNuB,EACCpC,EAAUgF,QAAO,SAAClD,EAAGmD,GAAJ,OAAUnD,EAAImD,EAAEhD,MAAQgD,EAAEb,QAAO,KAGtD,4BACEhB,QAAS,WACP,EAAKR,SAAS,CAAEuC,cAAc,KAEhCtE,UAAU,kBAJZ,aAUHH,KAAKnB,MAAM4F,cACV,kBAAC,IAAD,CAAMK,OAAK,EAACxC,SAAO,GACjB,yBAAKnC,UAAU,QACb,0BAAM4E,SAAU/E,KAAKiE,aACnB,wBAAI9D,UAAU,kBACZ,4BACE,wCACA,2BACE6D,KAAK,QACLjF,KAAK,QACLiG,UAAQ,EACR1E,SAAUN,KAAK+D,eAGnB,4BACE,uCACA,2BACEC,KAAK,OACLjF,KAAK,OACLiG,UAAQ,EACR1E,SAAUN,KAAK+D,eAGnB,4BACE,0CACA,2BACEC,KAAK,UACLjF,KAAK,OACLiG,UAAQ,EACR1E,SAAUN,KAAK+D,eAGnB,4BACE,4BAAQ5D,UAAU,iBAAiBpB,KAAK,UAAxC,wB,GAnKP4B,aAoLJC,eACb,SAAC/B,GAAD,MAAY,CACVc,MAAOd,EAAMc,MAAMA,MACnBL,UAAWT,EAAMQ,KAAKC,aAExB,CAAEuF,eD7K0B,SAAC5C,GAAD,OAAa,SAACpB,EAAU0C,GACpD,IAAMjE,EAAYiE,IACflE,KAAKC,UAAU6B,QACfL,QAAO,SAACC,GAAD,OAAOA,EAAEO,MAAQW,EAAQX,OACnCT,EAAS,CAAE9B,KPrBmB,mBOqBKE,QAAS,CAAEK,eAC9CG,aAAamE,QAAQ,YAAarE,KAAKsE,UAAUvE,MCwK/B2E,YChMO,SAACtE,GAAD,OAAW,SAACkB,GACrCsC,MAAM,cAAe,CACnB8B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM5F,KAAKsE,UAAUlE,KAEpByF,MAAK,SAAChC,GAAD,OAASA,EAAIC,UAClB+B,MAAK,SAAC9B,GACLzC,EAAS,CAAE9B,KTPW,eSOSE,QAASqE,IACxC7D,aAAa4F,MAAM,aACnBxE,EAAS,CAAE9B,KTPS,oBQ2LOyF,WCjLP,kBAAM,SAAC3D,GAC/BA,EAAS,CAAE9B,KTZc,mBQuLZ6B,CAMbkD,GE9LmBwB,E,uKAEjB,OACE,6BACE,yBAAKnF,UAAU,WACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,WACb,kBAAC,EAAD,a,GAV4BQ,aCAlC4E,E,kLAEFvF,KAAKC,MAAMuF,gB,+BAEH,IACA5F,EAAWI,KAAKC,MAAhBL,OACR,OAAQA,EAGN,yBAAKO,UAAU,UACb,sCACA,+BACE,+BACE,4BACE,kCACA,oCACA,qCACA,oCACA,qCACA,uCACA,uCAGJ,+BACGP,EAAO2C,KAAI,SAAC5C,GAAD,OACV,4BACE,4BAAKA,EAAM2B,KACX,4BAAK3B,EAAM+E,WACX,gCAAMhD,EAAe/B,EAAM0E,QAC3B,4BAAK1E,EAAMqE,MACX,4BAAKrE,EAAMwE,OACX,4BAAKxE,EAAMyE,SACX,4BACGzE,EAAML,UAAUiD,KAAI,SAACqC,GAAD,OACnB,6BACGA,EAAKlB,MADR,IACgB,MADhB,IACwBkB,EAAK9B,kBA5B3C,2C,GAPenC,aA+CNC,eACb,SAAC/B,GAAD,MAAY,CACVe,OAAQf,EAAMc,MAAMC,UAEtB,CACE4F,YFrCuB,kBAAM,SAAC3E,GAChCsC,MAAM,eACHiC,MAAK,SAAChC,GAAD,OAASA,EAAIC,UAClB+B,MAAK,SAAC9B,GACLzC,EAAS,CAAE9B,KThBW,eSgBSE,QAASqE,UE4B/B1C,CAOb2E,GCxDmBE,E,uKAEjB,OACE,6BACE,kBAAC,EAAD,W,GAJiC9E,aC0B1B+E,E,uKApBX,OACE,kBAAC,IAAD,CAAUjH,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAK0B,UAAU,kBACb,gCACE,kBAAC,IAAD,CAAMwF,GAAG,KAAT,uBACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,8BACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWJ,IAChC,kBAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWP,EAAYQ,OAAK,KAE9C,iE,GAdMC,IAAMpF,WCFxBqF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c6104fc9.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { productsReducer } from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { orderReducer } from \"./reducers/orderReducers\";\r\n\r\nconst initialState = {};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer,\r\n  }),\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  FILTER_PRODUCTS_BY_SIZE,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n} from \"../types\";\r\n\r\nexport const productsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FILTER_PRODUCTS_BY_SIZE:\r\n      return {\r\n        ...state,\r\n        size: action.payload.size,\r\n        filteredItems: action.payload.items,\r\n      };\r\n    case ORDER_PRODUCTS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        sort: action.payload.sort,\r\n        filteredItems: action.payload.items,\r\n      };\r\n    case FETCH_PRODUCTS:\r\n      return { items: action.payload, filteredItems: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CREATE_ORDER = \"CREATE_ORDER\";\r\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return { cartItems: action.payload.cartItems };\r\n    case REMOVE_FROM_CART:\r\n      return { cartItems: action.payload.cartItems };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_ORDER, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\r\n\r\nconst orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ORDER:\r\n      return { order: action.payload };\r\n    case CLEAR_ORDER:\r\n      return { order: null };\r\n    case FETCH_ORDERS:\r\n      return { orders: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { orderReducer };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return !this.props.filteredProducts ? (\r\n      <div>Loading...</div>\r\n    ) : (\r\n      <div className=\"filter\">\r\n        <div className=\"filter-result\">\r\n          {this.props.filteredProducts.length} Products\r\n        </div>\r\n        <div className=\"filter-sort\">\r\n          Order{\" \"}\r\n          <select\r\n            value={this.props.sort}\r\n            onChange={(e) =>\r\n              this.props.sortProducts(\r\n                this.props.filteredProducts,\r\n                e.target.value\r\n              )\r\n            }\r\n          >\r\n            <option value=\"latest\">Latest</option>\r\n            <option value=\"lowest\">Lowest</option>\r\n            <option value=\"highest\">Highest</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-size\">\r\n          Filter{\" \"}\r\n          <select\r\n            value={this.props.size}\r\n            onChange={(e) =>\r\n              this.props.filterProducts(this.props.products, e.target.value)\r\n            }\r\n          >\r\n            <option value=\"\">ALL</option>\r\n            <option value=\"XS\">XS</option>\r\n            <option value=\"S\">S</option>\r\n            <option value=\"M\">M</option>\r\n            <option value=\"L\">L</option>\r\n            <option value=\"XL\">XL</option>\r\n            <option value=\"XXL\">XXL</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    size: state.products.size,\r\n    sort: state.products.sort,\r\n    products: state.products.items,\r\n    filteredProducts: state.products.filteredItems,\r\n  }),\r\n  {\r\n    filterProducts,\r\n    sortProducts,\r\n  }\r\n)(Filter);\r\n","import { FETCH_PRODUCTS } from \"../types\";\r\nimport { FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\r\nexport const fetchProducts = () => async (dispatch) => {\r\n  const res = await fetch(\"/api/products\");\r\n  const data = await res.json();\r\n  console.log(data);\r\n  dispatch({\r\n    type: FETCH_PRODUCTS,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const filterProducts = (products, size) => (dispatch) => {\r\n  dispatch({\r\n    type: FILTER_PRODUCTS_BY_SIZE,\r\n    payload: {\r\n      size: size,\r\n      items:\r\n        size === \"\"\r\n          ? products\r\n          : products.filter((x) => x.availableSizes.indexOf(size) >= 0),\r\n    },\r\n  });\r\n};\r\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\r\n  const sortedProducts = filteredProducts.slice();\r\n  if (sort === \"latest\") {\r\n    sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\r\n  } else {\r\n    sortedProducts.sort((a, b) =>\r\n      sort === \"lowest\"\r\n        ? a.price > b.price\r\n          ? 1\r\n          : -1\r\n        : a.price > b.price\r\n        ? -1\r\n        : 1\r\n    );\r\n  }\r\n  console.log(sortedProducts);\r\n  dispatch({\r\n    type: ORDER_PRODUCTS_BY_PRICE,\r\n    payload: {\r\n      sort: sort,\r\n      items: sortedProducts,\r\n    },\r\n  });\r\n};\r\n","export default function formatCurrency(num) {\r\n  return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\r\n}\r\n","import React, { Component } from \"react\";\r\nimport formatCurrency from \"../util\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Modal from \"react-modal\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nclass Products extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  openModal = (product) => {\r\n    this.setState({ product });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ product: null });\r\n  };\r\n  render() {\r\n    const { product } = this.state;\r\n    return (\r\n      <div>\r\n        <Fade bottom cascade>\r\n          {!this.props.products ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ul className=\"products\">\r\n              {this.props.products.map((product) => (\r\n                <li key={product._id}>\r\n                  <div className=\"product\">\r\n                    <a\r\n                      href={\"#\" + product._id}\r\n                      onClick={() => this.openModal(product)}\r\n                    >\r\n                      <img src={product.image} alt={product.title}></img>\r\n                      <p>{product.title}</p>\r\n                    </a>\r\n                    <div className=\"product-price\">\r\n                      <div>{formatCurrency(product.price)}</div>\r\n                      <button\r\n                        onClick={() => this.props.addToCart(product)}\r\n                        className=\"button primary\"\r\n                      >\r\n                        Add To Cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </Fade>\r\n        {product && (\r\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n            <Zoom>\r\n              <button className=\"close-modal\" onClick={this.closeModal}>\r\n                x\r\n              </button>\r\n              <div className=\"product-details\">\r\n                <img src={product.image} alt={product.title}></img>\r\n                <div className=\"product-details-description\">\r\n                  <p>\r\n                    <strong>{product.title}</strong>\r\n                  </p>\r\n                  <p>{product.description}</p>\r\n                  <p>\r\n                    Avaiable Sizes:{\" \"}\r\n                    {product.availableSizes.map((x) => (\r\n                      <span>\r\n                        {\" \"}\r\n                        <button className=\"button\">{x}</button>\r\n                      </span>\r\n                    ))}\r\n                  </p>\r\n                  <div className=\"product-price\">\r\n                    <div>{formatCurrency(product.price)}</div>\r\n                    <button\r\n                      className=\"button primary\"\r\n                      onClick={() => {\r\n                        this.props.addToCart(product);\r\n                        this.closeModal();\r\n                      }}\r\n                    >\r\n                      Add To Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Zoom>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({ products: state.products.filteredItems }),\r\n  {\r\n    fetchProducts,\r\n    addToCart,\r\n  }\r\n)(Products);\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\r\n\r\nexport const addToCart = (product) => (dispatch, getState) => {\r\n  const cartItems = getState().cart.cartItems.slice();\r\n  let alreadyExists = false;\r\n  cartItems.forEach((x) => {\r\n    if (x._id === product._id) {\r\n      alreadyExists = true;\r\n      x.count++;\r\n    }\r\n  });\r\n  if (!alreadyExists) {\r\n    cartItems.push({ ...product, count: 1 });\r\n  }\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: { cartItems },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n\r\nexport const removeFromCart = (product) => (dispatch, getState) => {\r\n  const cartItems = getState()\r\n    .cart.cartItems.slice()\r\n    .filter((x) => x._id !== product._id);\r\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport formatCurrency from \"../util\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { removeFromCart } from \"../actions/cartActions\";\r\nimport { createOrder, clearOrder } from \"../actions/orderActions\";\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      showCheckout: false,\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  createOrder = (e) => {\r\n    e.preventDefault();\r\n    const order = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      cartItems: this.props.cartItems,\r\n      total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\r\n    };\r\n    this.props.createOrder(order);\r\n  };\r\n  closeModal = () => {\r\n    this.props.clearOrder();\r\n  };\r\n  render() {\r\n    const { cartItems, order } = this.props;\r\n    return (\r\n      <div>\r\n        {cartItems.length === 0 ? (\r\n          <div className=\"cart cart-header\">Cart is empty</div>\r\n        ) : (\r\n          <div className=\"cart cart-header\">\r\n            You have {cartItems.length} in the cart{\" \"}\r\n          </div>\r\n        )}\r\n\r\n        {order && (\r\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n            <Zoom>\r\n              <button className=\"close-modal\" onClick={this.closeModal}>\r\n                x\r\n              </button>\r\n              <div className=\"order-details\">\r\n                <h3 className=\"success-message\">Your order has been placed.</h3>\r\n                <h2>Order {order._id}</h2>\r\n                <ul>\r\n                  <li>\r\n                    <div>Name:</div>\r\n                    <div>{order.name}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Email:</div>\r\n                    <div>{order.email}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Address:</div>\r\n                    <div>{order.address}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Date:</div>\r\n                    <div>{order.createdAt}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Total:</div>\r\n                    <div>{formatCurrency(order.total)}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Cart Items:</div>\r\n                    <div>\r\n                      {order.cartItems.map((x) => (\r\n                        <div>\r\n                          {x.count} {\" x \"} {x.title}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Zoom>\r\n          </Modal>\r\n        )}\r\n        <div>\r\n          <div className=\"cart\">\r\n            <Fade left cascade>\r\n              <ul className=\"cart-items\">\r\n                {cartItems.map((item) => (\r\n                  <li key={item._id}>\r\n                    <div>\r\n                      <img src={item.image} alt={item.title}></img>\r\n                    </div>\r\n                    <div>\r\n                      <div>{item.title}</div>\r\n                      <div className=\"right\">\r\n                        {formatCurrency(item.price)} x {item.count}{\" \"}\r\n                        <button\r\n                          className=\"button\"\r\n                          onClick={() => this.props.removeFromCart(item)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Fade>\r\n          </div>\r\n          {cartItems.length !== 0 && (\r\n            <div>\r\n              <div className=\"cart\">\r\n                <div className=\"total\">\r\n                  <div>\r\n                    Total:{\" \"}\r\n                    {formatCurrency(\r\n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({ showCheckout: true });\r\n                    }}\r\n                    className=\"button primary\"\r\n                  >\r\n                    Proceed\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {this.state.showCheckout && (\r\n                <Fade right cascade>\r\n                  <div className=\"cart\">\r\n                    <form onSubmit={this.createOrder}>\r\n                      <ul className=\"form-container\">\r\n                        <li>\r\n                          <label>Email</label>\r\n                          <input\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            required\r\n                            onChange={this.handleInput}\r\n                          ></input>\r\n                        </li>\r\n                        <li>\r\n                          <label>Name</label>\r\n                          <input\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={this.handleInput}\r\n                          ></input>\r\n                        </li>\r\n                        <li>\r\n                          <label>Address</label>\r\n                          <input\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            required\r\n                            onChange={this.handleInput}\r\n                          ></input>\r\n                        </li>\r\n                        <li>\r\n                          <button className=\"button primary\" type=\"submit\">\r\n                            Checkout\r\n                          </button>\r\n                        </li>\r\n                      </ul>\r\n                    </form>\r\n                  </div>\r\n                </Fade>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    order: state.order.order,\r\n    cartItems: state.cart.cartItems,\r\n  }),\r\n  { removeFromCart, createOrder, clearOrder }\r\n)(Cart);\r\n","import { CREATE_ORDER, CLEAR_CART, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\r\n\r\nexport const createOrder = (order) => (dispatch) => {\r\n  fetch(\"/api/orders\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(order),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({ type: CREATE_ORDER, payload: data });\r\n      localStorage.clear(\"cartItems\");\r\n      dispatch({ type: CLEAR_CART });\r\n    });\r\n};\r\nexport const clearOrder = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_ORDER });\r\n};\r\nexport const fetchOrders = () => (dispatch) => {\r\n  fetch(\"/api/orders\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({ type: FETCH_ORDERS, payload: data });\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"../components/Filter\";\r\nimport Products from \"../components/Products\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nexport default class HomeScreen extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"content\">\r\n          <div className=\"main\">\r\n            <Filter></Filter>\r\n            <Products></Products>\r\n          </div>\r\n          <div className=\"sidebar\">\r\n            <Cart />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchOrders } from \"../actions/orderActions\";\r\nimport formatCurrency from \"../util\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n  render() {\r\n    const { orders } = this.props;\r\n    return !orders ? (\r\n      <div>Orders</div>\r\n    ) : (\r\n      <div className=\"orders\">\r\n        <h2>Orders</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADDRESS</th>\r\n              <th>ITEMS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt}</td>\r\n                <td> {formatCurrency(order.total)}</td>\r\n                <td>{order.name}</td>\r\n                <td>{order.email}</td>\r\n                <td>{order.address}</td>\r\n                <td>\r\n                  {order.cartItems.map((item) => (\r\n                    <div>\r\n                      {item.count} {\" x \"} {item.title}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    orders: state.order.orders,\r\n  }),\r\n  {\r\n    fetchOrders,\r\n  }\r\n)(Orders);\r\n","import React, { Component } from \"react\";\r\nimport Orders from \"../components/Orders\";\r\n\r\nexport default class AdminScreen extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Orders />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport AdminScreen from \"./screens/AdminScreen\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"grid-container\">\r\n            <header>\r\n              <Link to=\"/\">React Shopping Cart</Link>\r\n              <Link to=\"/admin\">Admin</Link>\r\n            </header>\r\n            <main>\r\n              <Route path=\"/admin\" component={AdminScreen} />\r\n              <Route path=\"/\" component={HomeScreen} exact />\r\n            </main>\r\n            <footer>All right is reserved.</footer>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}